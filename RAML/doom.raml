#%RAML 1.0
title: RESTful-DOOM

types:
  World: !include ./world.raml
  Door: !include ./door.raml
  MapObject: !include ./map_object.raml
  SpawnMapObject: !include ./map_object_spawn.raml
  PlayerAction: !include ./player_action.raml
  Player: !include ./player.raml

baseUri: http://localhost:6666

/api/player:
  description: Player endpoints
  get:
    description: Query the player
    responses:
      200:
        body:
          application/json:
            type: Player
            example: !include ./player_example.raml 
  patch:
    description: Update the player (RESTRICTED)
    body:
      application/json:
        type: Player
        example: |
          {
            "weapon": 3,
            "ammo": 1, "amount": 100,
            "armor": 100,
            "health": 100,
            "cheatFlags": {
              "CF_GODMODE": 1,
              "CF_NOCLIP": 1
            }
          }
    responses:
      200:
        body:
          application/json:
            type: Player
            example: !include ./player_example.raml
      400:
        description: Invalid parameters
      403:
        description: Permission denied.  Multiplayer clients may not perform this action

  /actions:
    post:
      description: Create an action for the player to perform
      body:
        application/json:
          type: PlayerAction
          example: |
            {
              "type": "strafe-left",
              "amount": 25
            }
      responses:
        201:
        400:
            description: Invalid parameters

/api/player/turn:
  description: Turn the player accurately
  post:
    description: Post the absolute angle that you want your player to turn.  Engine will pick the best direction
    body:
      application/json:
        example: |
          {
            "target_angle": 96
          }
    responses:
      200:
      400: 
        description: Invalid parameters (angle must be between 0 and 359)

/api/players:
  description: Multiplayer endpoints
  get:
    description: Query all players in game
    responses:
      200:
        body:
          application/json:
            type: Player
            example: | 
              [
                player1,
                player2
              ]

  /{id}:
    description: Specific player in Multiplayer endpoints
    get:
      description: Query a specific player
      response:
        200:
          body:
            application/json:
              type: Player
              example: !include ./player_example.raml
        404:
            description: Invalid player selected
    patch:
      description: Patch a specific player (RESTRICTED)
      body:
        application/json:
          type: Player
          example: |
            {
              "weapon": 3,
              "ammo": 1, "amount": 100,
              "armor": 100,
              "health": 100,
              "cheatFlags": {
                "CF_GODMODE": 1,
                "CF_NOCLIP": 1
              }
            }
      responses:
        200:
        403: 
          description: Permission denied.  Multiplayer clients may not perform this action
        404:
          description: Invalid player selected
    post:
      description: Post and action for a specific player (RESTRICTED)
      body:
        application/json:
          type: Player
          example: !include ./player_example.raml
      responses:
        200:
        403: 
          description: Permission denied.  Multiplayer clients may not perform this action
        404:
          description: Invalid player selected

/api/world:
  description: World endpoints
  get:
    description: Query the current world state
    responses:
      200:
        body:
          application/json:
            type: World
            example: | 
              {
                "episode": 1,
                "map": 2,
                "wad": "doom1.wad",
                "skill": "Hurt me plenty",
                "lights": "on"
              }
  patch:
    description: Update the current world state (RESTRICTED)
    body: 
      application/json:
        type: World
        example: | 
              {
                "map": 3
              }
    responses:
      200:
        body:
          application/json:
            type: World
            example: | 
              {
                "episode": 1,
                "map": 3,
                "wad": "doom1.wad",
                "skill": "Hurt me plenty",
                "lights": "on"
              }
      400:
          description: Invalid parameters
      403:
          description: Permission denied.  Multiplayer clients may not perform this action

  /doors:
    description: World doors endpoints
    get:
      description: Query door items
      responses:
        200:
          body:
            application/json:
              type: Door[]
              example: |
                [
                  {
                    "id": 140,
                    "state": "closed",
                    "keyRequired": "none",
                    "specialType": 1,
                    "line": {
                      "v1": {
                        "x": 3072,
                        "y": -4016
                      },
                      "v2": {
                        "x": 2944,
                        "y": -4016
                      }
                    }
                  }
                ]
    /{id}:
      description: Query the specified door
      uriParameters: 
        id: 
          description: "door id"
      get:
        description: Query the specified door
        responses:
          200:
            body:
              application/json:
                type: Door
                example: |
                  {
                    "id": 140,
                    "state": "closed",
                    "keyRequired": "none",
                    "specialType": 1,
                    "line": {
                      "v1": {
                        "x": 3072,
                        "y": -4016
                      },
                      "v2": {
                        "x": 2944,
                        "y": -4016
                      }
                    }
                  }
          404:
            description: The specified door does not exist

      patch:
        description: Update the specified door (RESTRICTED)
        body: 
          application/json:
            type: Door
            example: |
              {
                "state": "open"
              }
        responses:
          200:
            body:
              application/json:
                type: Door
                example: |
                  {
                    "id": 140,
                    "state": "open",
                    "keyRequired": "none",
                    "specialType": 1,
                    "line": {
                      "v1": {
                        "x": 3072,
                        "y": -4016
                      },
                      "v2": {
                        "x": 2944,
                        "y": -4016
                      }
                    }
                  }
          403:
            description: Permission denied.  Multiplayer clients may not perform this action
          404:
            description: The specified door does not exist

  /los/{id1}/{id2}:
    description: Test if there is a line of sight between two objects
    uriParameters: 
      id1 
        description: "id of first object"
      id2: 
        description: "id of second object"
    get:
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "los": true
                }
        404:
          description: Invalid id
        
  /movetest:
    description: Test if an object has a clear path to move
    get:
      queryParameters:
        id: 
          description: "id of the object to test"
        x:
          description: "x co-ordinate of the destination"       
        y:
          description: "y co-ordinate of the destination"       
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "result": true
                }
        404:
          description: Invalid id

  /objects:
    description: World objects endpoints
    get:
      description: Query map object items
      queryParameters:
        distance:
          description: |
            Only return items up to this distance from player
      responses:
        200:
          body:
            application/json:
              type: MapObject[]
    post:
      description: Spawn a new map object (RESTRICTED)
      body:
        application/json:
          type: SpawnMapObject
          example: |
            {
              "type": "IMP",
              "distance": 250
            }
      responses:
        200:
          body:
            application/json:
              type: MapObject
              example: !include map_object_example.raml
        400:
          description: The specified object type is invalid
        403:
          description: Permission denied.  Multiplayer clients may not perform this action
    /{id}:
      get:
        description: Query the specified map object
        responses:
          200:
            body:
              application/json:
                type: MapObject
                example: !include map_object_example.raml
          404:
            description: The specified object does not exist
      patch:
        description: Update the specifed map object (RESTRICTED)
        body:
          application/json:
            type: MapObject
            example: |
              {
                "health": 20,
                "position": {
                  "z": 190
                },
                "flags": {
                  "MF_SHADOW": true
                }
              }
        responses:
          200:
            body:
              application/json:
                type: MapObject
                example: !include map_object_example.raml
          403:
            description: Permission denied.  Multiplayer clients may not perform this action
          404:
            description: The specified object does not exist
      delete:
        description: Delete the specified map object (RESTRICTED)
        responses:
          204:
            description: The specified object was deleted
          403:
            description: Permission denied.  Multiplayer clients may not perform this action
          404:
            description: The specified object does not exist
